{"ast":null,"code":"var _jsxFileName = \"/Users/macylia/Projects/goit-react-hw-01-components/src/components/Statistics/statistics.js\";\nimport React from 'react';\nimport { Profile } from \"../Profile/profile\";\nimport styles from './statistics.module.css';\nimport PropTypes from 'prop-types';\nexport const Statistics = ({\n  title,\n  stats\n}) => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: styles.statistics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, title && /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  }, title), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.statList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, stats.map(({\n    id,\n    label,\n    percentage\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }, label), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  }, percentage)))));\n};\nStatistics.defaultProps = {\n  title: \"Upload stats\"\n};\nProfile.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.shape({\n    id: PropTypes.string,\n    label: PropTypes.string,\n    percentage: PropTypes.number\n  })\n};\n\nfunction randomColor() {\n  const colors = [\"rgb(111 194 240)\", \"rgb(148 76 236)\", \"rgb(212 88 104)\", \"rgb(88 181 196)\"];\n  let randomIndex = Math.floor(Math.random() * colors.length);\n  return colors[randomIndex];\n}\n\nconsole.log(randomColor());","map":{"version":3,"sources":["/Users/macylia/Projects/goit-react-hw-01-components/src/components/Statistics/statistics.js"],"names":["React","Profile","styles","PropTypes","Statistics","title","stats","statistics","statList","map","id","label","percentage","defaultProps","propTypes","string","shape","number","randomColor","colors","randomIndex","Math","floor","random","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAC1C,sBACI;AAAS,IAAA,SAAS,EAAEJ,MAAM,CAACK,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,iBAAI;AAAI,IAAA,SAAS,EAAEH,MAAM,CAACG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADd,eAEI;AAAI,IAAA,SAAS,EAAEH,MAAM,CAACM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,GAAN,CAAU,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ,GAAD,kBACH;AAAI,IAAA,GAAG,EAAEF,EAAT;AACI,IAAA,KAAK,EAAE,EADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CAHJ,eAII;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,UAA9B,CAJJ,CADP,CADL,CAFJ,CADJ;AAkBH,CAnBM;AAqBPR,UAAU,CAACS,YAAX,GAA0B;AACtBR,EAAAA,KAAK,EAAE;AADe,CAA1B;AAIAJ,OAAO,CAACa,SAAR,GAAoB;AAChBT,EAAAA,KAAK,EAAEF,SAAS,CAACY,MADD;AAEhBT,EAAAA,KAAK,EAAEH,SAAS,CAACa,KAAV,CAAgB;AACfN,IAAAA,EAAE,EAAEP,SAAS,CAACY,MADC;AAEfJ,IAAAA,KAAK,EAAER,SAAS,CAACY,MAFF;AAGfH,IAAAA,UAAU,EAAET,SAAS,CAACc;AAHP,GAAhB;AAFS,CAApB;;AASA,SAASC,WAAT,GAAsB;AAClB,QAAMC,MAAM,GAAG,CAAC,kBAAD,EAAqB,iBAArB,EAAwC,iBAAxC,EAA0D,iBAA1D,CAAf;AACA,MAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAlB;AACA,SAAOL,MAAM,CAACC,WAAD,CAAb;AACH;;AAEDK,OAAO,CAACC,GAAR,CAAYR,WAAW,EAAvB","sourcesContent":["import React from 'react';\nimport {Profile} from \"../Profile/profile\";\nimport styles from './statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Statistics = ({title, stats}) => {\n    return (\n        <section className={styles.statistics}>\n            {title && <h2 className={styles.title}>{title}</h2>}\n            <ul className={styles.statList}>\n                {stats.map(({id, label, percentage}) => (\n                        <li key={id}\n                            style={{}}\n                        >\n                            <span className=\"label\">{label}</span>\n                            <span className=\"percentage\">{percentage}</span>\n                        </li>\n                    )\n                )}\n\n\n            </ul>\n        </section>\n    )\n};\n\nStatistics.defaultProps = {\n    title: \"Upload stats\"\n};\n\nProfile.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.shape({\n            id: PropTypes.string,\n            label: PropTypes.string,\n            percentage: PropTypes.number\n        })\n}\n\nfunction randomColor(){\n    const colors = [\"rgb(111 194 240)\", \"rgb(148 76 236)\", \"rgb(212 88 104)\",\"rgb(88 181 196)\"];\n    let randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n}\n\nconsole.log(randomColor());"]},"metadata":{},"sourceType":"module"}